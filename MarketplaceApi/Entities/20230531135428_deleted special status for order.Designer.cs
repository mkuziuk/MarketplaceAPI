// <auto-generated />
using System;
using MarketplaceApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MarketplaceApi.Entities
{
    [DbContext(typeof(MarketplaceContext))]
    [Migration("20230531135428_deleted special status for order")]
    partial class deletedspecialstatusfororder
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("MarketplaceApi.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DeliveryAddress")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("OrderStatusId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("SellDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("WayOfPayment")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderDate = new DateTime(2023, 5, 31, 16, 54, 27, 506, DateTimeKind.Local).AddTicks(9176),
                            OrderStatusId = 0,
                            UserId = 3,
                            WayOfPayment = 0
                        });
                });

            modelBuilder.Entity("MarketplaceApi.Models.OrderedProduct", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderedProduct");
                });

            modelBuilder.Entity("MarketplaceApi.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Height")
                        .HasColumnType("integer");

                    b.Property<int>("InStockQuantity")
                        .HasColumnType("integer");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("boolean");

                    b.Property<int>("Length")
                        .HasColumnType("integer");

                    b.Property<int>("Material")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("PublicationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ShopId")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<int>("UseCase")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("WhereUsed")
                        .HasColumnType("integer");

                    b.Property<int>("Width")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ShopId");

                    b.HasIndex("UserId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2023, 5, 31, 16, 54, 27, 506, DateTimeKind.Local).AddTicks(6627),
                            Height = 6,
                            InStockQuantity = 20,
                            IsPublic = true,
                            Length = 6,
                            Material = 1,
                            Name = "ball",
                            Price = 1500,
                            PublicationDate = new DateTime(2023, 5, 31, 16, 54, 27, 506, DateTimeKind.Local).AddTicks(7094),
                            ShopId = 1,
                            Type = 1,
                            UseCase = 1,
                            UserId = 2,
                            WhereUsed = 1,
                            Width = 6
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2023, 5, 31, 16, 54, 27, 506, DateTimeKind.Local).AddTicks(7892),
                            Height = 16,
                            InStockQuantity = 25,
                            IsPublic = true,
                            Length = 5,
                            Material = 2,
                            Name = "tower",
                            Price = 2500,
                            PublicationDate = new DateTime(2023, 5, 31, 16, 54, 27, 506, DateTimeKind.Local).AddTicks(7912),
                            ShopId = 1,
                            Type = 2,
                            UseCase = 2,
                            UserId = 2,
                            WhereUsed = 2,
                            Width = 5
                        });
                });

            modelBuilder.Entity("MarketplaceApi.Models.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Shop");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2023, 5, 31, 16, 54, 27, 505, DateTimeKind.Local).AddTicks(9342),
                            Name = "shop1",
                            OwnerId = 2
                        });
                });

            modelBuilder.Entity("MarketplaceApi.Models.ShopModerator", b =>
                {
                    b.Property<int>("ModeratorId")
                        .HasColumnType("integer");

                    b.Property<int>("ShopId")
                        .HasColumnType("integer");

                    b.HasKey("ModeratorId", "ShopId");

                    b.HasIndex("ShopId");

                    b.ToTable("ShopModerator");

                    b.HasData(
                        new
                        {
                            ModeratorId = 2,
                            ShopId = 1
                        });
                });

            modelBuilder.Entity("MarketplaceApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Admin")
                        .HasColumnType("boolean");

                    b.Property<string>("DeliveryAddress")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SecondName")
                        .HasColumnType("text");

                    b.Property<bool>("Seller")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Admin = true,
                            DeliveryAddress = "Moscow",
                            Email = "1111mail.com",
                            FirstName = "User1",
                            Phone = "+71111111111",
                            RegistrationDate = new DateTime(2023, 5, 31, 16, 54, 27, 499, DateTimeKind.Local).AddTicks(4928),
                            SecondName = "User1",
                            Seller = false
                        },
                        new
                        {
                            Id = 2,
                            Admin = false,
                            DeliveryAddress = "Belgorod",
                            Email = "2222mail.com",
                            FirstName = "User2",
                            Phone = "+72222222222",
                            RegistrationDate = new DateTime(2023, 5, 31, 16, 54, 27, 504, DateTimeKind.Local).AddTicks(4487),
                            SecondName = "User2",
                            Seller = true
                        },
                        new
                        {
                            Id = 3,
                            Admin = false,
                            DeliveryAddress = "Ufa",
                            Email = "3333mail.com",
                            FirstName = "User3",
                            Phone = "+73333333333",
                            RegistrationDate = new DateTime(2023, 5, 31, 16, 54, 27, 504, DateTimeKind.Local).AddTicks(4742),
                            SecondName = "User3",
                            Seller = false
                        });
                });

            modelBuilder.Entity("MarketplaceApi.Models.Order", b =>
                {
                    b.HasOne("MarketplaceApi.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MarketplaceApi.Models.OrderedProduct", b =>
                {
                    b.HasOne("MarketplaceApi.Models.Order", "Order")
                        .WithMany("OrderedProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketplaceApi.Models.Product", "Product")
                        .WithMany("OrderedProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MarketplaceApi.Models.Product", b =>
                {
                    b.HasOne("MarketplaceApi.Models.Shop", "Shop")
                        .WithMany("Products")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketplaceApi.Models.User", "User")
                        .WithMany("Product")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shop");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MarketplaceApi.Models.Shop", b =>
                {
                    b.HasOne("MarketplaceApi.Models.User", "Owner")
                        .WithMany("ShopsOwned")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("MarketplaceApi.Models.ShopModerator", b =>
                {
                    b.HasOne("MarketplaceApi.Models.User", "Moderator")
                        .WithMany("ShopModerators")
                        .HasForeignKey("ModeratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketplaceApi.Models.Shop", "Shop")
                        .WithMany("ShopModerators")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moderator");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("MarketplaceApi.Models.Order", b =>
                {
                    b.Navigation("OrderedProducts");
                });

            modelBuilder.Entity("MarketplaceApi.Models.Product", b =>
                {
                    b.Navigation("OrderedProducts");
                });

            modelBuilder.Entity("MarketplaceApi.Models.Shop", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("ShopModerators");
                });

            modelBuilder.Entity("MarketplaceApi.Models.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Product");

                    b.Navigation("ShopModerators");

                    b.Navigation("ShopsOwned");
                });
#pragma warning restore 612, 618
        }
    }
}
